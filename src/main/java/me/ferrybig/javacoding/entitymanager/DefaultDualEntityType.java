/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package me.ferrybig.javacoding.entitymanager;

import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.Map;

/**
 *
 * @author admin
 */
public class DefaultDualEntityType<T, P1, P2> extends DefaultEntityType<T> implements DualEntityType<T, P1, P2>{

	private final Field firstKey;
	private final Field secondKey;
	private final String firstKeyColumn;
	private final String secondKeyColumn;
	
	public DefaultDualEntityType(Class<T> clazz, String firstKey, String secondKey) {
		super(clazz);
		try {
			this.firstKey = clazz.getDeclaredField(firstKey);
			this.secondKey = clazz.getDeclaredField(secondKey);
		} catch (NoSuchFieldException | SecurityException ex) {
			throw new InvalidEntityDescriptionException("Unable to first either first or second key", ex);
		}
		Map<String, FieldInformation> info = this.getEntityFields();
		firstKeyColumn = info.get(this.firstKey.getName()).getColumn();
		secondKeyColumn = info.get(this.secondKey.getName()).getColumn();
	}

	@Override
	public boolean isPrimaryKeyAutogenerated() {
		return false;
	}

	@Override
	public Map<String, Object> generateWhereClauseForKey(P1 key1, P2 key2) {
		Map<String, Object> map = new HashMap<>(2);
		map.put(firstKeyColumn, key1);
		map.put(secondKeyColumn, key2);
		return map;
	}
	
}
